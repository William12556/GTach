Metadata-Version: 2.4
Name: obdii-rpm-display
Version: 1.0.0
Summary: Real-time engine RPM display for Raspberry Pi with HyperPixel display using ELM327 Bluetooth adapter
Author-email: William Watson <william.watson@example.com>
Maintainer-email: William Watson <william.watson@example.com>
License: MIT License
        
        Copyright (c) 2025 William12556
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: Homepage, https://github.com/williamwatson/ODBII
Project-URL: Repository, https://github.com/williamwatson/ODBII.git
Project-URL: Documentation, https://github.com/williamwatson/ODBII/docs
Project-URL: Bug Tracker, https://github.com/williamwatson/ODBII/issues
Keywords: obd,obdii,rpm,automotive,raspberry-pi,elm327,bluetooth,hyperpixel,real-time
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: End Users/Desktop
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: POSIX :: Linux
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Topic :: System :: Hardware
Classifier: Topic :: Scientific/Engineering :: Visualization
Classifier: Topic :: Utilities
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: pygame>=2.1.2
Requires-Dist: PyYAML>=6.0
Requires-Dist: pyserial>=3.5
Requires-Dist: python-dateutil>=2.8.2
Requires-Dist: termcolor>=2.1.0
Provides-Extra: hardware
Requires-Dist: RPi.GPIO>=0.7.0; platform_system == "Linux" and extra == "hardware"
Requires-Dist: hyperpixel2r>=0.0.1; platform_system == "Linux" and extra == "hardware"
Requires-Dist: evdev>=1.4.0; platform_system == "Linux" and extra == "hardware"
Requires-Dist: pybluez>=0.23; platform_system == "Linux" and extra == "hardware"
Requires-Dist: bleak>=0.19.0; platform_system != "Linux" and extra == "hardware"
Provides-Extra: rpi
Requires-Dist: RPi.GPIO>=0.7.0; extra == "rpi"
Requires-Dist: hyperpixel2r>=0.0.1; extra == "rpi"
Requires-Dist: evdev>=1.4.0; extra == "rpi"
Requires-Dist: pybluez>=0.23; extra == "rpi"
Requires-Dist: gpiozero>=1.6.2; extra == "rpi"
Requires-Dist: picamera2>=0.3.0; python_version >= "3.9" and extra == "rpi"
Provides-Extra: dev
Requires-Dist: pytest>=7.0.0; extra == "dev"
Requires-Dist: pytest-cov>=4.0.0; extra == "dev"
Requires-Dist: pytest-mock>=3.8.0; extra == "dev"
Requires-Dist: pytest-asyncio>=0.21.0; extra == "dev"
Requires-Dist: black>=22.3.0; extra == "dev"
Requires-Dist: flake8>=4.0.1; extra == "dev"
Requires-Dist: mypy>=0.991; extra == "dev"
Requires-Dist: isort>=5.10.0; extra == "dev"
Requires-Dist: pre-commit>=2.20.0; extra == "dev"
Requires-Dist: ipython>=8.0.0; extra == "dev"
Requires-Dist: jupyter>=1.0.0; extra == "dev"
Requires-Dist: requests>=2.28.0; extra == "dev"
Provides-Extra: test
Requires-Dist: pytest>=7.0.0; extra == "test"
Requires-Dist: pytest-cov>=4.0.0; extra == "test"
Requires-Dist: pytest-mock>=3.8.0; extra == "test"
Requires-Dist: pytest-asyncio>=0.21.0; extra == "test"
Requires-Dist: coverage>=6.4.0; extra == "test"
Provides-Extra: macos
Requires-Dist: pytest>=7.0.0; extra == "macos"
Requires-Dist: pytest-cov>=4.0.0; extra == "macos"
Requires-Dist: pytest-mock>=3.8.0; extra == "macos"
Requires-Dist: black>=22.3.0; extra == "macos"
Requires-Dist: flake8>=4.0.1; extra == "macos"
Requires-Dist: mypy>=0.991; extra == "macos"
Requires-Dist: isort>=5.10.0; extra == "macos"
Requires-Dist: ipython>=8.0.0; extra == "macos"
Requires-Dist: jupyter>=1.0.0; extra == "macos"
Requires-Dist: requests>=2.28.0; extra == "macos"
Requires-Dist: bleak>=0.19.0; extra == "macos"
Provides-Extra: docs
Requires-Dist: sphinx>=5.0.0; extra == "docs"
Requires-Dist: sphinx-rtd-theme>=1.0.0; extra == "docs"
Requires-Dist: myst-parser>=0.18.0; extra == "docs"
Requires-Dist: sphinx-autodoc-typehints>=1.19.0; extra == "docs"
Provides-Extra: extras
Requires-Dist: numpy>=1.21.0; extra == "extras"
Requires-Dist: matplotlib>=3.5.0; extra == "extras"
Requires-Dist: pillow>=9.0.0; extra == "extras"
Requires-Dist: scipy>=1.8.0; extra == "extras"
Provides-Extra: production
Requires-Dist: RPi.GPIO>=0.7.0; extra == "production"
Requires-Dist: hyperpixel2r>=0.0.1; extra == "production"
Requires-Dist: evdev>=1.4.0; extra == "production"
Requires-Dist: pybluez>=0.23; extra == "production"
Requires-Dist: gpiozero>=1.6.2; extra == "production"
Requires-Dist: psutil>=5.9.0; extra == "production"
Requires-Dist: systemd-python>=234; extra == "production"
Provides-Extra: complete
Requires-Dist: pytest>=7.0.0; extra == "complete"
Requires-Dist: pytest-cov>=4.0.0; extra == "complete"
Requires-Dist: pytest-mock>=3.8.0; extra == "complete"
Requires-Dist: pytest-asyncio>=0.21.0; extra == "complete"
Requires-Dist: black>=22.3.0; extra == "complete"
Requires-Dist: flake8>=4.0.1; extra == "complete"
Requires-Dist: mypy>=0.991; extra == "complete"
Requires-Dist: isort>=5.10.0; extra == "complete"
Requires-Dist: pre-commit>=2.20.0; extra == "complete"
Requires-Dist: ipython>=8.0.0; extra == "complete"
Requires-Dist: jupyter>=1.0.0; extra == "complete"
Requires-Dist: requests>=2.28.0; extra == "complete"
Requires-Dist: sphinx>=5.0.0; extra == "complete"
Requires-Dist: sphinx-rtd-theme>=1.0.0; extra == "complete"
Requires-Dist: myst-parser>=0.18.0; extra == "complete"
Requires-Dist: numpy>=1.21.0; extra == "complete"
Requires-Dist: matplotlib>=3.5.0; extra == "complete"
Requires-Dist: pillow>=9.0.0; extra == "complete"
Requires-Dist: bleak>=0.19.0; extra == "complete"
Dynamic: license-file

# OBDII RPM Display

**Author: William Watson**  
**Created: 2025-07-02**

Real-time engine RPM display application for Raspberry Pi Zero 2W with HyperPixel 2.0" Round Display, using ELM327 Bluetooth adapter.

## Hardware Requirements

- Raspberry Pi Zero 2W
- HyperPixel 2.0" Round Display (480x480)
- ELM327 Bluetooth OBD-II Adapter
- Compatible vehicle with OBD-II port (CAN protocol)

## Installation

**Single Installation Method:**

```bash
# Clone repository
git clone https://github.com/YOUR_USERNAME/ODBII.git
cd ODBII

# Run unified installation script
./install.sh install

# For automatic startup service
./install.sh install --service
```

The installation script will:
- Check system requirements and existing installations
- Install only missing dependencies
- Configure hardware automatically
- Create unified `obdii` command
- Optionally setup systemd service

## Usage

**Single Runtime Command:**

```bash
# Start application
obdii

# Debug mode
obdii --debug

# Validate configuration
obdii --validate-config

# Test hardware
obdii --test-hardware
```

## Configuration

**Unified Configuration Hierarchy:**

1. Command line: `obdii --config /path/to/config.yaml`
2. Environment: `OBDII_CONFIG=/path/to/config.yaml`
3. User config: `~/.config/obdii/config.yaml`
4. System config: `/etc/obdii/config.yaml`
5. Built-in defaults

Edit `/etc/obdii/config.yaml` to customize settings:

```yaml
display:
  mode: DIGITAL        # DIGITAL or GAUGE
  rpm_warning: 6500    # Warning threshold
  rpm_danger: 7000     # Danger threshold

bluetooth:
  timeout: 1.0         # Connection timeout
  retries: 3          # Connection attempts
```

## Service Management

```bash
# Check installation status
./install.sh status

# Start/stop service (if installed with --service)
systemctl start obdii
systemctl stop obdii
systemctl status obdii
```

## Uninstallation

```bash
./install.sh uninstall
```

## Dependencies

**Core Runtime:**
- pygame>=2.1.2
- PyYAML>=6.0
- pyserial>=3.5

**Hardware Support:**
- PyBluez>=0.23
- hyperpixel2r>=0.1.0
- evdev>=1.4.0

**System Packages:**
- python3, python3-pip, python3-venv
- libbluetooth-dev, i2c-tools
- libsdl2-dev, python3-pygame

## Features

- Real-time RPM display (digital and gauge modes)
- Touch interface for mode switching
- Automatic Bluetooth connection management
- Configurable RPM warning thresholds
- Status indicator for connection state
- Unified configuration system
- Optional systemd service integration

## Troubleshooting

```bash
# Test system requirements
./install.sh test

# Check hardware connections
obdii --test-hardware

# Validate configuration
obdii --validate-config

# Debug mode
obdii --debug
```

## Project Structure

```
OBDII/
├── install.sh              # Unified installation script
├── src/obdii/               # Application source code
├── config/                  # Configuration templates
├── tests/                   # Test suite
└── docs/                    # Documentation
```

## Development

```bash
# Install development dependencies
pip install -e .[dev]

# Run tests
pytest tests/

# Format code
black src/
flake8 src/
```

## License

MIT License - see LICENSE file for details.
